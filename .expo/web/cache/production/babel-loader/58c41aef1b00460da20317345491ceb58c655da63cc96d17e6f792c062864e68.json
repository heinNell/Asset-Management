{"ast":null,"code":"import\"expo/build/Expo.fx\";import\"@expo/metro-runtime\";import{withErrorOverlay}from\"@expo/metro-runtime/error-overlay\";import*as React from\"react\";import AppRegistry from\"react-native-web/dist/exports/AppRegistry\";import Platform from\"react-native-web/dist/exports/Platform\";import{createRoot,hydrateRoot}from\"./createRoot\";var rootTag=null;export default function registerRootComponent(component){var qualifiedComponent=component;if(process.env.NODE_ENV!==\"production\"){var _ref=require(\"expo/build/launch/withDevTools\"),withDevTools=_ref.withDevTools;qualifiedComponent=withErrorOverlay(withDevTools(component));}if(Platform.OS!==\"web\"){AppRegistry.registerComponent(\"main\",function(){return qualifiedComponent;});}else if(typeof document!==\"undefined\"){var tag=document.getElementById(\"root\");if(!tag){tag=document.getElementById(\"main\");if(process.env.NODE_ENV!==\"production\"){if(tag){console.warn('Mounting the root React component to an HTML element with id \"main\" is deprecated. Use id \"root\" instead.');}}}if(!tag){throw new Error('Required HTML element with id \"root\" was not found in the document HTML. This is required for mounting the root React component.');}if(process.env.EXPO_PUBLIC_USE_STATIC){hydrateRoot(tag,React.createElement(qualifiedComponent));}else{rootTag??=createRoot(tag);rootTag.render(React.createElement(qualifiedComponent));}}}","map":{"version":3,"names":["withErrorOverlay","React","AppRegistry","Platform","createRoot","hydrateRoot","rootTag","registerRootComponent","component","qualifiedComponent","process","env","NODE_ENV","_ref","require","withDevTools","OS","registerComponent","document","tag","getElementById","console","warn","Error","EXPO_PUBLIC_USE_STATIC","createElement","render"],"sources":["/workspaces/Asset-Management/node_modules/.pnpm/expo-router@2.0.15_b4efdf747a57d6c457a1ea39ac4e29a2/node_modules/expo-router/src/fork/expo/registerRootComponent.tsx"],"sourcesContent":["// Fork of:\n// https://github.com/expo/expo/blob/main/packages/expo/src/launch/registerRootComponent.tsx\n// Originally made in Expo SDK 47 to add support for React 18 and Metro web.\nimport \"expo/build/Expo.fx\";\n\n// NOTE(EvanBacon): Add Metro web support to the global runtime.\nimport \"@expo/metro-runtime\";\n\n// @ts-ignore: build order issue\nimport { withErrorOverlay } from \"@expo/metro-runtime/error-overlay\";\nimport * as React from \"react\";\nimport { AppRegistry, Platform } from \"react-native\";\n\nimport { createRoot, hydrateRoot } from \"./createRoot\";\n\ntype InitialProps = {\n  exp: {\n    notification?: any;\n    manifestString?: string;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\n// Web root tag is preserved for re-use between refreshes.\nlet rootTag: import(\"react-dom/client\").Root | null = null;\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  let qualifiedComponent = component;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const { withDevTools } =\n      require(\"expo/build/launch/withDevTools\") as typeof import(\"expo/build/launch/withDevTools\");\n    // Add error support to the root component.\n    qualifiedComponent = withErrorOverlay(withDevTools(component));\n  }\n\n  if (Platform.OS !== \"web\") {\n    AppRegistry.registerComponent(\"main\", () => qualifiedComponent);\n  } else if (\n    // Skip querying the DOM if we're in a Node.js environment.\n    typeof document !== \"undefined\"\n  ) {\n    let tag = document.getElementById(\"root\");\n\n    if (!tag) {\n      tag = document.getElementById(\"main\");\n      if (process.env.NODE_ENV !== \"production\") {\n        // This block will be removed in production\n        if (tag) {\n          console.warn(\n            'Mounting the root React component to an HTML element with id \"main\" is deprecated. Use id \"root\" instead.'\n          );\n        }\n      }\n    }\n\n    if (!tag) {\n      throw new Error(\n        'Required HTML element with id \"root\" was not found in the document HTML. This is required for mounting the root React component.'\n      );\n    }\n\n    // Using React 18 directly because `react-native-web` still uses the old API:\n    // https://github.com/necolas/react-native-web/blob/e8098fd029102d7801c32c1ede792bce01808c00/packages/react-native-web/src/exports/render/index.js#L10\n    if (process.env.EXPO_PUBLIC_USE_STATIC) {\n      hydrateRoot(tag, React.createElement(qualifiedComponent));\n    } else {\n      rootTag ??= createRoot(tag);\n      rootTag.render(React.createElement(qualifiedComponent));\n    }\n  }\n}\n"],"mappings":"AAGA,MAAO,oBAAoB,CAG3B,MAAO,qBAAqB,CAG5B,OAASA,gBAAgB,KAAQ,mCAAmC,CACpE,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,WAAA,wDAAAC,QAAA,8CAG/B,OAASC,UAAU,CAAEC,WAAW,oBAchC,GAAI,CAAAC,OAA+C,CAAG,IAAI,CAE1D,cAAe,SAAS,CAAAC,qBAAqBA,CAC3CC,SAAiC,CAC3B,CACN,GAAI,CAAAC,kBAAkB,CAAGD,SAAS,CAElC,GAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC,IAAAC,IAAA,CACEC,OAAO,CAAC,gCAAgC,CAAC,CADnCC,YAAY,CAAAF,IAAA,CAAZE,YAAY,CAGpBN,kBAAkB,CAAGT,gBAAgB,CAACe,YAAY,CAACP,SAAS,CAAC,CAAC,CAChE,CAEA,GAAIL,QAAQ,CAACa,EAAE,GAAK,KAAK,CAAE,CACzBd,WAAW,CAACe,iBAAiB,CAAC,MAAM,CAAE,iBAAM,CAAAR,kBAAkB,GAAC,CACjE,CAAC,IAAM,IAEL,MAAO,CAAAS,QAAQ,GAAK,WAAW,CAC/B,CACA,GAAI,CAAAC,GAAG,CAAGD,QAAQ,CAACE,cAAc,CAAC,MAAM,CAAC,CAEzC,GAAI,CAACD,GAAG,CAAE,CACRA,GAAG,CAAGD,QAAQ,CAACE,cAAc,CAAC,MAAM,CAAC,CACrC,GAAIV,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CAEzC,GAAIO,GAAG,CAAE,CACPE,OAAO,CAACC,IAAI,CACV,2GACF,CAAC,CACH,CACF,CACF,CAEA,GAAI,CAACH,GAAG,CAAE,CACR,KAAM,IAAI,CAAAI,KAAK,CACb,kIACF,CAAC,CACH,CAIA,GAAIb,OAAO,CAACC,GAAG,CAACa,sBAAsB,CAAE,CACtCnB,WAAW,CAACc,GAAG,CAAElB,KAAK,CAACwB,aAAa,CAAChB,kBAAkB,CAAC,CAAC,CAC3D,CAAC,IAAM,CACLH,OAAO,GAAKF,UAAU,CAACe,GAAG,CAAC,CAC3Bb,OAAO,CAACoB,MAAM,CAACzB,KAAK,CAACwB,aAAa,CAAChB,kBAAkB,CAAC,CAAC,CACzD,CACF,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}