{"ast":null,"code":"import{useLayoutEffect}from\"react\";import Platform from\"react-native-web/dist/exports/Platform\";var canWarn=Platform.select({native:process.env.NODE_ENV!==\"production\",default:process.env.NODE_ENV!==\"production\"&&typeof window!==\"undefined\"});var warned=new Set();export function useWarnOnce(message){var guard=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var key=arguments.length>2&&arguments[2]!==undefined?arguments[2]:message;useLayoutEffect(function(){if(guard&&canWarn&&!warned.has(key)){warned.add(key);console.warn(message);}},[guard]);}export function useDeprecated(message){var guard=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var key=arguments.length>2&&arguments[2]!==undefined?arguments[2]:message;return useWarnOnce(key,guard,`Expo Router: ${message}`);}","map":{"version":3,"names":["useLayoutEffect","Platform","canWarn","select","native","process","env","NODE_ENV","default","window","warned","Set","useWarnOnce","message","guard","arguments","length","undefined","key","has","add","console","warn","useDeprecated"],"sources":["/workspaces/Asset-Management/node_modules/.pnpm/expo-router@2.0.15_b4efdf747a57d6c457a1ea39ac4e29a2/node_modules/expo-router/src/useDeprecated.ts"],"sourcesContent":["import { useLayoutEffect } from \"react\";\nimport { Platform } from \"react-native\";\n\n// Node environment may render in multiple processes causing the warning to log mutiple times\n// Hence we skip the warning in these environments.\nconst canWarn = Platform.select({\n  native: process.env.NODE_ENV !== \"production\",\n  default:\n    process.env.NODE_ENV !== \"production\" && typeof window !== \"undefined\",\n});\n\nconst warned = new Set<string>();\n\nexport function useWarnOnce(\n  message: string,\n  guard: unknown = true,\n  key = message\n) {\n  // useLayoutEffect typically doesn't run in node environments.\n  // Combined with skipWarn, this should prevent unwanted warnings during SSR rendering\n  useLayoutEffect(() => {\n    if (guard && canWarn && !warned.has(key)) {\n      warned.add(key);\n      console.warn(message);\n    }\n  }, [guard]);\n}\n\nexport function useDeprecated(\n  /** The deprecated message to display */\n  message: string,\n  /** The guard to cause the warning to being displayed */\n  guard: unknown = true,\n  /** The key to use for the warning. Used to detect if the warning has already been shown. */\n  key = message\n) {\n  return useWarnOnce(key, guard, `Expo Router: ${message}`);\n}\n"],"mappings":"AAAA,OAASA,eAAe,KAAQ,OAAO,CAAC,OAAAC,QAAA,8CAKxC,GAAM,CAAAC,OAAO,CAAGD,QAAQ,CAACE,MAAM,CAAC,CAC9BC,MAAM,CAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAC7CC,OAAO,CACLH,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,EAAI,MAAO,CAAAE,MAAM,GAAK,WAC/D,CAAC,CAAC,CAEF,GAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,GAAG,CAAS,CAAC,CAEhC,MAAO,SAAS,CAAAC,WAAWA,CACzBC,OAAe,CAGf,IAFA,CAAAC,KAAc,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IACrB,CAAAG,GAAG,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGF,OAAO,CAIbb,eAAe,CAAC,UAAM,CACpB,GAAIc,KAAK,EAAIZ,OAAO,EAAI,CAACQ,MAAM,CAACS,GAAG,CAACD,GAAG,CAAC,CAAE,CACxCR,MAAM,CAACU,GAAG,CAACF,GAAG,CAAC,CACfG,OAAO,CAACC,IAAI,CAACT,OAAO,CAAC,CACvB,CACF,CAAC,CAAE,CAACC,KAAK,CAAC,CAAC,CACb,CAEA,MAAO,SAAS,CAAAS,aAAaA,CAE3BV,OAAe,CAKf,IAHA,CAAAC,KAAc,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IAErB,CAAAG,GAAG,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGF,OAAO,CAEb,MAAO,CAAAD,WAAW,CAACM,GAAG,CAAEJ,KAAK,CAAE,gBAAgBD,OAAO,EAAE,CAAC,CAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}