{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"wrapper\"];var _Constants$expoConfig,_Constants$expoConfig2,_Constants$expoConfig3;function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import Constants from\"expo-constants\";import{StatusBar}from\"expo-status-bar\";import React,{Fragment}from\"react\";import Platform from\"react-native-web/dist/exports/Platform\";import{SafeAreaProvider}from\"react-native-safe-area-context\";import UpstreamNavigationContainer from\"./fork/NavigationContainer\";import{useInitializeExpoRouter}from\"./global-state/router-store\";import{SplashScreen}from\"./views/Splash\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function getGestureHandlerRootView(){try{var _ref=require(\"react-native-gesture-handler\"),_GestureHandlerRootView=_ref.GestureHandlerRootView;if(!_GestureHandlerRootView){return React.Fragment;}function GestureHandler(props){return _jsx(_GestureHandlerRootView,_objectSpread({style:{flex:1}},props));}if(process.env.NODE_ENV===\"development\"){GestureHandler.displayName=\"GestureHandlerRootView\";}return GestureHandler;}catch(_unused){return React.Fragment;}}var GestureHandlerRootView=getGestureHandlerRootView();var INITIAL_METRICS={frame:{x:0,y:0,width:0,height:0},insets:{top:0,left:0,right:0,bottom:0}};var hasViewControllerBasedStatusBarAppearance=Platform.OS===\"ios\"&&!!((_Constants$expoConfig=Constants.expoConfig)!=null&&(_Constants$expoConfig2=_Constants$expoConfig.ios)!=null&&(_Constants$expoConfig3=_Constants$expoConfig2.infoPlist)!=null&&_Constants$expoConfig3.UIViewControllerBasedStatusBarAppearance);export function ExpoRoot(_ref2){var _ref2$wrapper=_ref2.wrapper,ParentWrapper=_ref2$wrapper===void 0?Fragment:_ref2$wrapper,props=_objectWithoutProperties(_ref2,_excluded);var wrapper=function wrapper(_ref3){var children=_ref3.children;return _jsx(ParentWrapper,{children:_jsx(GestureHandlerRootView,{children:_jsxs(SafeAreaProvider,{initialMetrics:INITIAL_METRICS,children:[children,!hasViewControllerBasedStatusBarAppearance&&_jsx(StatusBar,{style:\"auto\"})]})})});};return _jsx(ContextNavigator,_objectSpread(_objectSpread({},props),{},{wrapper:wrapper}));}var initialUrl=Platform.OS===\"web\"&&typeof window!==\"undefined\"?new URL(window.location.href):undefined;function ContextNavigator(_ref4){var context=_ref4.context,_ref4$location=_ref4.location,initialLocation=_ref4$location===void 0?initialUrl:_ref4$location,_ref4$wrapper=_ref4.wrapper,WrapperComponent=_ref4$wrapper===void 0?Fragment:_ref4$wrapper;var store=useInitializeExpoRouter(context,initialLocation);if(store.shouldShowTutorial()){SplashScreen.hideAsync();if(process.env.NODE_ENV===\"development\"){var Tutorial=require(\"./onboard/Tutorial\").Tutorial;return _jsx(WrapperComponent,{children:_jsx(Tutorial,{})});}else{return null;}}var Component=store.rootComponent;return _jsx(UpstreamNavigationContainer,{ref:store.navigationRef,initialState:store.initialState,linking:store.linking,documentTitle:{enabled:false},children:_jsx(WrapperComponent,{children:_jsx(Component,{})})});}","map":{"version":3,"names":["Constants","StatusBar","React","Fragment","Platform","SafeAreaProvider","UpstreamNavigationContainer","useInitializeExpoRouter","SplashScreen","jsx","_jsx","jsxs","_jsxs","getGestureHandlerRootView","_ref","require","GestureHandlerRootView","GestureHandler","props","_GestureHandlerRootView","_objectSpread","style","flex","process","env","NODE_ENV","displayName","_unused","INITIAL_METRICS","frame","x","y","width","height","insets","top","left","right","bottom","hasViewControllerBasedStatusBarAppearance","OS","_Constants$expoConfig","expoConfig","_Constants$expoConfig2","ios","_Constants$expoConfig3","infoPlist","UIViewControllerBasedStatusBarAppearance","ExpoRoot","_ref2","_ref2$wrapper","wrapper","ParentWrapper","_objectWithoutProperties","_excluded","_ref3","children","initialMetrics","ContextNavigator","initialUrl","window","URL","location","href","undefined","_ref4","context","_ref4$location","initialLocation","_ref4$wrapper","WrapperComponent","store","shouldShowTutorial","hideAsync","Tutorial","Component","rootComponent","ref","navigationRef","initialState","linking","documentTitle","enabled"],"sources":["/workspaces/Asset-Management/node_modules/.pnpm/expo-router@2.0.15_b4efdf747a57d6c457a1ea39ac4e29a2/node_modules/expo-router/src/ExpoRoot.tsx"],"sourcesContent":["import Constants from \"expo-constants\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { FunctionComponent, ReactNode, Fragment } from \"react\";\nimport { Platform } from \"react-native\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport UpstreamNavigationContainer from \"./fork/NavigationContainer\";\nimport { useInitializeExpoRouter } from \"./global-state/router-store\";\nimport { RequireContext } from \"./types\";\nimport { SplashScreen } from \"./views/Splash\";\n\nexport type ExpoRootProps = {\n  context: RequireContext;\n  location?: URL;\n  wrapper?: FunctionComponent<{ children: ReactNode }>;\n};\n\nfunction getGestureHandlerRootView() {\n  try {\n    const { GestureHandlerRootView } =\n      require(\"react-native-gesture-handler\") as typeof import(\"react-native-gesture-handler\");\n\n    if (!GestureHandlerRootView) {\n      return React.Fragment;\n    }\n\n    // eslint-disable-next-line no-inner-declarations\n    function GestureHandler(props: any) {\n      return <GestureHandlerRootView style={{ flex: 1 }} {...props} />;\n    }\n    if (process.env.NODE_ENV === \"development\") {\n      // @ts-expect-error\n      GestureHandler.displayName = \"GestureHandlerRootView\";\n    }\n    return GestureHandler;\n  } catch {\n    return React.Fragment;\n  }\n}\n\nconst GestureHandlerRootView = getGestureHandlerRootView();\n\nconst INITIAL_METRICS = {\n  frame: { x: 0, y: 0, width: 0, height: 0 },\n  insets: { top: 0, left: 0, right: 0, bottom: 0 },\n};\n\nconst hasViewControllerBasedStatusBarAppearance =\n  Platform.OS === \"ios\" &&\n  !!Constants.expoConfig?.ios?.infoPlist\n    ?.UIViewControllerBasedStatusBarAppearance;\n\nexport function ExpoRoot({\n  wrapper: ParentWrapper = Fragment,\n  ...props\n}: ExpoRootProps) {\n  /*\n   * Due to static rendering we need to wrap these top level views in second wrapper\n   * View's like <GestureHandlerRootView /> generate a <div> so if the parent wrapper\n   * is a HTML document, we need to ensure its inside the <body>\n   */\n  const wrapper: ExpoRootProps[\"wrapper\"] = ({ children }) => {\n    return (\n      <ParentWrapper>\n        <GestureHandlerRootView>\n          <SafeAreaProvider\n            // SSR support\n            initialMetrics={INITIAL_METRICS}\n          >\n            {children}\n\n            {/* Users can override this by adding another StatusBar element anywhere higher in the component tree. */}\n            {!hasViewControllerBasedStatusBarAppearance && (\n              <StatusBar style=\"auto\" />\n            )}\n          </SafeAreaProvider>\n        </GestureHandlerRootView>\n      </ParentWrapper>\n    );\n  };\n\n  return <ContextNavigator {...props} wrapper={wrapper} />;\n}\n\nconst initialUrl =\n  Platform.OS === \"web\" && typeof window !== \"undefined\"\n    ? new URL(window.location.href)\n    : undefined;\n\nfunction ContextNavigator({\n  context,\n  location: initialLocation = initialUrl,\n  wrapper: WrapperComponent = Fragment,\n}: ExpoRootProps) {\n  const store = useInitializeExpoRouter(context, initialLocation);\n\n  if (store.shouldShowTutorial()) {\n    SplashScreen.hideAsync();\n    if (process.env.NODE_ENV === \"development\") {\n      const Tutorial = require(\"./onboard/Tutorial\").Tutorial;\n      return (\n        <WrapperComponent>\n          <Tutorial />\n        </WrapperComponent>\n      );\n    } else {\n      // Ensure tutorial styles are stripped in production.\n      return null;\n    }\n  }\n\n  const Component = store.rootComponent;\n\n  return (\n    <UpstreamNavigationContainer\n      ref={store.navigationRef}\n      initialState={store.initialState}\n      linking={store.linking}\n      documentTitle={{\n        enabled: false,\n      }}\n    >\n      <WrapperComponent>\n        <Component />\n      </WrapperComponent>\n    </UpstreamNavigationContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}